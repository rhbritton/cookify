{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Documents\\\\projects\\\\cookify\\\\pages\\\\recipe.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Error from 'next/error';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport RecipeData from '../data/RecipeData';\nimport IngredientData from '../data/IngredientData';\nimport BaseContainer from '../components/BaseContainer';\nimport Header from '../components/Header';\n\nconst IngredientListed = function (props) {\n  if (props.ingredient && props.ingredient.ingredient) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, props.ingredient.amount, \" \", props.ingredient.measurement, \" \", props.ingredient.ingredient.name);\n  } else {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n};\n\nconst PrevStep = function (props) {\n  if (props.page) {\n    return __jsx(Link, {\n      href: `/recipe?id=${props.id}&page=${props.page}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Previous\"));\n  } else {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n};\n\nconst NextStep = function (props) {\n  if (props.recipe && props.recipe.steps && props.page <= props.recipe.steps.length) {\n    return __jsx(Link, {\n      href: `/recipe?id=${props.id}&page=${props.page}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Next\"));\n  } else {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n};\n\nexport default function RecipeView() {\n  const router = useRouter();\n  if (!router.query.id) return __jsx(Error, {\n    status: 404,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n  var page = router.query.page;\n  if (!page) page = 1;\n  page = parseInt(page);\n  var prev_page;\n  if (page > 1) prev_page = page - 1;\n  var recipe = RecipeData.recipes[router.query.id];\n  var title = recipe.title;\n  var ingredients = recipe.ingredients;\n  ingredients && ingredients.forEach(function (ingredient, i) {\n    ingredients[i].ingredient = IngredientData[ingredient.ingredient];\n  });\n  ingredients && ingredients.sort(function (a, b) {\n    if (!a.ingredient) return -1;\n    if (!b.ingredient) return 1;\n    if (a.ingredient.name.toLowerCase() > b.ingredient.name.toLowerCase()) return 1;else return -1;\n  });\n  return __jsx(BaseContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Ingredients:\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, ingredients.map(ingredient => __jsx(IngredientListed, {\n    ingredient: ingredient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }))), __jsx(PrevStep, {\n    id: router.query.id,\n    page: prev_page,\n    recipe: recipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(NextStep, {\n    id: router.query.id,\n    page: page + 1,\n    recipe: recipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/Ryan/Documents/projects/cookify/pages/recipe.js"],"names":["Error","Link","useRouter","RecipeData","IngredientData","BaseContainer","Header","IngredientListed","props","ingredient","amount","measurement","name","PrevStep","page","id","NextStep","recipe","steps","length","RecipeView","router","query","parseInt","prev_page","recipes","title","ingredients","forEach","i","sort","a","b","toLowerCase","map"],"mappings":"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","sourcesContent":["import Error from 'next/error'\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport RecipeData from '../data/RecipeData';\r\nimport IngredientData from '../data/IngredientData';\r\n\r\nimport BaseContainer from '../components/BaseContainer';\r\nimport Header from '../components/Header';\r\n\r\nconst IngredientListed = function(props) {\r\n\tif (props.ingredient && props.ingredient.ingredient) {\r\n\t\treturn (\r\n\t\t\t<div>{props.ingredient.amount} {props.ingredient.measurement} {props.ingredient.ingredient.name}</div>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (<div></div>);\r\n\t}\r\n}\r\n\r\nconst PrevStep = function(props) {\r\n\tif (props.page) {\r\n\t\treturn (\r\n\t\t\t<Link href={`/recipe?id=${props.id}&page=${props.page}`}>\r\n\t\t\t\t<a>Previous</a>\r\n\t\t\t</Link>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (<div></div>);\r\n\t}\r\n}\r\n\r\nconst NextStep = function(props) {\r\n\tif (props.recipe && props.recipe.steps && props.page <= props.recipe.steps.length) {\r\n\t\treturn (\r\n\t\t\t<Link href={`/recipe?id=${props.id}&page=${props.page}`}>\r\n\t\t\t\t<a>Next</a>\r\n\t\t\t</Link>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (<div></div>);\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default function RecipeView() {\r\n\tconst router = useRouter();\r\n\r\n\tif (!router.query.id)\r\n\t\treturn <Error status={404} />\r\n\r\n\tvar page = router.query.page;\r\n\tif (!page)\r\n\t\tpage = 1;\r\n\r\n\tpage = parseInt(page);\r\n\r\n\tvar prev_page;\r\n\tif (page > 1)\r\n\t\tprev_page = page-1;\r\n\r\n\tvar recipe = RecipeData.recipes[router.query.id];\r\n\tvar title = recipe.title;\r\n\tvar ingredients = recipe.ingredients;\r\n\r\n\tingredients && ingredients.forEach(function(ingredient, i) {\r\n\t\tingredients[i].ingredient = IngredientData[ingredient.ingredient];\r\n\t})\r\n\r\n\tingredients && ingredients.sort(function(a, b) {\r\n\t\tif (!a.ingredient)\r\n\t\t\treturn -1;\r\n\r\n\t\tif (!b.ingredient)\r\n\t\t\treturn 1;\r\n\r\n\t\tif (a.ingredient.name.toLowerCase() > b.ingredient.name.toLowerCase())\r\n\t\t\treturn 1;\r\n\t\telse\r\n\t\t\treturn -1;\r\n\t})\r\n\r\n\treturn (\r\n\t\t<BaseContainer>\r\n\t\t\t<Header />\r\n\r\n\t\t\t<p>{title}</p>\r\n\r\n\t\t\t<p>Ingredients:</p>\r\n\t\t\t<div>\r\n\t\t\t\t{ingredients.map((ingredient) => (\r\n\t\t\t\t\t<IngredientListed ingredient={ingredient} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\r\n\t\t\t<PrevStep id={router.query.id} page={prev_page} recipe={recipe} />\r\n\t\t\t<NextStep id={router.query.id} page={page+1} recipe={recipe} />\r\n\t\t</BaseContainer>\r\n\t);\r\n}"]},"metadata":{},"sourceType":"module"}